apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'maven'

group = 'com.curiousattemptbunny'
artifact = 'gradle-github-deployer'
version = '0.1-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {
	groovy 'org.codehaus.groovy:groovy-all:1.8.0'
}

buildscript {
	repositories {
		mavenCentral()
	}
	
	dependencies {
		classpath 'org.codehaus.groovy:groovy-all:1.8.0'
		classpath 'org.codehaus.groovy.modules.http-builder:http-builder:0.5.1'
	}
}

import groovyx.net.http.HTTPBuilder
import groovy.json.JsonBuilder
import org.apache.http.HttpRequestInterceptor
import org.apache.http.HttpRequest
import org.apache.http.protocol.HttpContext

import static groovyx.net.http.Method.*
import static groovyx.net.http.ContentType.*

githubUser = 'curious-attempt-bunny'
githubRepo = artifact

task sampleUpload << {
	def http = new HTTPBuilder("https://api.github.com")
	
	def auth = "$githubUsername:$githubPassword".toString()
	http.client.addRequestInterceptor(new HttpRequestInterceptor() {
		void process(HttpRequest httpRequest, HttpContext httpContext) {
			httpRequest.addHeader('Authorization', 'Basic ' + auth.bytes.encodeBase64().toString())
		}
	})
	
	File file = new File("sample.txt")
	
	def json = new JsonBuilder()
	
	json {
		name file.name+System.currentTimeMillis()
		size file.length()
	}
	
	def document = json.toString()
	
	def path = "/repos/$githubUser/$githubRepo/downloads"
	
	def upload = http.request( POST, JSON ) {
		uri.path = path
		body = document
	};
	
	http = new HTTPBuilder("https://github.s3.amazonaws.com")

	http.request( POST, TEXT ) { req ->
		uri.path = ''
		send URLENC, [
			key: upload.path,
			acl: upload.acl,
			success_action_status: 201,
			Filename: upload.name,
			AWSAccessKeyId: upload.accesskeyid,
			Policy: upload.policy,
			Signature: upload.signature,
			'Content-Type': upload.mime_type,
			file: file.text
		]
    }
}